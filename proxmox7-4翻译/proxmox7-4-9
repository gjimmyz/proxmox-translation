proxmox7-4-9

第9章
存储复制
pvesr命令行工具管理Proxmox VE存储复制框架。存储复制为使用本地存储的客户机提供冗余，并减少迁移时间。
它将客户机卷复制到另一个节点，以便所有数据都可以在不使用共享存储的情况下获取。复制使用快照来最小化通过网络发送的流量。
因此，初始完全同步后，只会增量发送新数据。在节点故障的情况下，您的客户端数据仍在被复制的节点上可用。
复制在可配置的时间间隔内自动完成。最小复制间隔是一分钟，最大间隔是一周一次。用于指定这些间隔的格式是systemd日历事件的子集，参见9.2节的调度格式部分：
可以将客户机复制到多个目标节点，但不能两次复制到同一目标节点。
每个复制的带宽都可以被限制，以避免过载存储或服务器。
只需要传输自上次复制以来的更改（所谓的增量），如果将客户机迁移到已经复制到的节点。这大大减少了所需的时间。如果您将一个客户机迁移到复制目标节点，复制方向会自动切换。
例如：VM100当前在nodeA上并被复制到nodeB。您将它迁移到nodeB，所以现在它自动从nodeB复制回nodeA。
如果您迁移到一个未复制的客户机的节点，必须发送整个磁盘数据。迁移后，复制作业将继续将此客户机复制到已配置的节点。
重要
允许在存储复制中使用高可用性，但在最后同步时间和节点故障时间之间可能会有一些数据丢失。

9.1 支持的存储类型
表9.1：存储类型
描述 PVE类型 快照 稳定
ZFS（本地）zfspool 是 是

9.2 调度格式
复制使用日历事件（见D.1节）来配置调度。

9.3 错误处理
如果复制作业遇到问题，它会被置于错误状态。在这种状态下，配置的复制间隔暂时被暂停。失败的复制会在30分钟的间隔内反复尝试。一旦成功，原来的日程表就会再次被激活。

9.3.1 可能的问题
最常见的问题有以下几点。根据您的设置，可能还有其他原因。
• 网络不工作。
• 复制目标存储上没有剩余空间。
• 目标节点上有相同存储ID的存储
注意
您可以随时使用复制日志来查明问题的原因。

9.3.2 错误情况下的客户机迁移
在严重错误的情况下，虚拟客户机可能会被卡在失败的节点上。然后您需要手动将它移动到一个正常工作的节点上。

9.3.3 示例
假设你有两个客户机（VM 100和CT 200）在节点A上运行并复制到节点B。
节点A失败并且无法恢复在线。现在你必须手动将客户机迁移到节点B。
• 通过ssh连接到节点B或通过WebUI打开其shell
• 检查集群是否有法定人数
pvecm status
• 如果你没有法定人数，我们强烈建议你首先修复这个问题，并使节点再次可操作。只有在当前这不可能的情况下，你可能需要使用以下命令强制在当前节点上执行法定人数：
# pvecm expected 1
警告
避免改变影响集群的设置，特别是设置了预期投票数（例如添加/删除节点、存储、虚拟客户机）的情况下。只有在需要让重要的客户机重新启动或解决法定人数问题时，才使用它。
• 将来自原始节点A的两个客户机配置文件移动到节点B：
mv /etc/pve/nodes/A/qemu-server/100.conf /etc/pve/nodes/B/qemu-server/100.conf
mv /etc/pve/nodes/A/lxc/200.conf /etc/pve/nodes/B/lxc/200.conf
• 现在你可以再次启动这些客户机：
qm start 100
pct start 200
记住用你的相应值替换VMIDs和节点名称。

9.4 管理作业
你可以使用web GUI轻松创建、修改和删除复制作业。另外，也可以使用命令行接口（CLI）工具pvesr来实现这些功能。
在web GUI中，你可以在所有级别（数据中心、节点、虚拟客户机）找到复制面板。它们在显示的作业上有所不同：所有作业，节点特定的作业，或客户机特定的作业。
在添加新的作业时，您需要指定客户机（如果还没有选择的话）以及目标节点。如果不希望使用默认的每15分钟一次，可以设置复制调度（见9.2节）。
您可以对复制作业施加速率限制。速率限制可以帮助保持存储的负载在可接受的范围内。
复制作业由集群范围内唯一的ID标识。此ID由VMID和作业号码组成。只有在使用CLI工具时，才需要手动指定此ID。

9.5 命令行接口示例
创建一个每5分钟运行一次，带宽限制为10 Mbps（每秒兆字节）的复制作业，用于ID为100的客户机。
pvesr create-local-job 100-0 pve1 --schedule "*/5" --rate 10
禁用活动的作业ID 100-0。
pvesr disable 100-0
启用已停用的作业ID 100-0。
pvesr enable 100-0
将作业ID 100-0的调度间隔更改为每小时一次。
pvesr update 100-0 --schedule ’*/00’

























