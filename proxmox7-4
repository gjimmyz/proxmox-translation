proxmox7-4

第1章
简介
Proxmox VE是一个运行虚拟机和容器的平台。它基于Debian Linux，完全开源。
为了最大程度的灵活性，我们实现了两种虚拟化技术 - 基于内核的虚拟机(KVM)和基于容器的虚拟化(LXC)。
我们的一个主要设计目标是使管理尽可能简单。您可以在单个节点上使用ProxmoxVE，或者组合多个节点的集群。
所有管理任务都可以使用我们的基于Web的管理界面完成，甚至新手用户也可以在几分钟内设置并安装Proxmox VE。

1.1 集中管理
虽然许多人从单个节点开始，但Proxmox VE可以扩展到大量的集群节点。集群堆栈已完全集成，并随默认安装一起提供。

独特的多主设计
集成的基于Web的管理界面为您提供了一个清晰的KVM客户机和Linux容器以及整个集群的概览。
您可以轻松地从图形用户界面管理您的虚拟机和容器、存储或集群。无需安装单独的、复杂的、昂贵的管理服务器。

Proxmox 集群文件系统（pmxcfs）
Proxmox VE 使用独特的 Proxmox 集群文件系统（pmxcfs），这是一个用于存储配置文件的数据库驱动文件系统。这使您能够存储数千个虚拟机的配置。通过使用 
corosync，在所有集群节点上实时复制这些文件。
文件系统将所有数据存储在磁盘上的持久数据库中，尽管如此，数据的副本仍位于 RAM 中，最大存储容量为30MB - 足够容纳数千个虚拟机。
Proxmox VE是唯一使用此独特集群文件系统的虚拟化平台。

基于 Web 的管理界面
Proxmox VE易于使用。管理任务可以通过包含的基于Web的管理界面完成 - 无需安装单独的管理工具或任何额外的管理节点和庞大的数据库。
多主工具允许您从集群的任何节点管理整个集群。
基于JavaScript框架（ExtJS）的中央基于Web的管理界面使您能够从图形用户界面控制所有功能并查看每个单独节点的历史记录和syslogs。
这包括运行备份或还原作业、实时迁移或由HA触发的活动。

命令行
对于习惯于Unix shell或Windows Powershell的舒适性的高级用户，Proxmox VE提供了一个命令行界面，用于管理虚拟环境中的所有组件。
该命令行界面具有智能的选项卡完成功能和完整的UNIX man页面形式的文档。

REST API
Proxmox VE使用RESTful API。我们选择JSON作为主要数据格式，并使用JSON Schema正式定义整个API。这使得第三方管理工具（如自定义托管环境）能够快速轻松地进行集成。

基于角色的管理
您可以使用基于角色的用户和权限管理来为所有对象（如虚拟机、存储、节点等）定义细粒度的访问权限。这允许您定义特权并帮助您控制对对象的访问。
这个概念也被称为访问控制列表：每个权限在特定路径上指定一个主体（用户或组）和一个角色（一组特权）。

认证领域
Proxmox VE支持多种认证来源，如Microsoft Active Directory、LDAP、Linux PAM标准认证或内置的Proxmox VE认证服务器。
这样，您可以根据组织的需求和现有的认证基础设施选择合适的认证方法。

1.2 灵活的存储
Proxmox VE的存储模型非常灵活。虚拟机映像可以存储在一个或多个本地存储上，也可以存储在诸如NFS的共享存储和SAN上。
没有限制，您可以根据需要配置任意数量的存储定义。您可以使用Debian Linux可用的所有存储技术。
将虚拟机存储在共享存储上的一个主要优势是能够在不中断的情况下实时迁移运行中的虚拟机，因为集群中的所有节点都可以直接访问虚拟机磁盘映像。
我们目前支持以下网络存储类型：
    LVM Group（使用iSCSI目标的网络支持）
    iSCSI目标
    NFS共享
    CIFS共享
    Ceph RBD
    直接使用iSCSI LUN
    GlusterFS
支持的本地存储类型包括：
    LVM Group（本地支持设备，如块设备、FC设备、DRBD等）
    目录（现有文件系统上的存储）
    ZFS

1.3 集成备份和还原
集成的备份工具（vzdump）可为运行中的容器和KVM客户机创建一致的快照。它基本上创建了一个包含虚拟机/
容器配置文件的VM或CT数据存档。KVM实时备份适用于所有存储类型，包括NFS、CIFS、iSCSI LUN、Ceph 
RBD上的VM映像。新的备份格式针对快速有效地存储虚拟机备份进行了优化（稀疏文件、无序数据、最小化I/O）。

1.4 高可用性集群
多节点的Proxmox VE HA集群可定义高可用性虚拟服务器。Proxmox VE HA集群基于经过验证的Linux HA技术，提供稳定可靠的HA服务。

1.5 灵活的网络
Proxmox VE使用桥接网络模型。所有虚拟机可以共享一个桥，就像每个客户机的虚拟网络电缆都插入同一个交换机中一样。
为了将虚拟机连接到外部世界，桥接器连接到物理网络卡并分配TCP/IP配置。
为了进一步提高灵活性，可以使用VLAN（IEEE 802.1q）和网络绑定/聚合。通过这种方式，可以为Proxmox VE主机构建复杂、灵活的虚拟网络，充分利用Linux网络堆栈的功能。

1.6 集成防火墙
集成的防火墙允许您在任何虚拟机或容器接口上过滤网络数据包。常见的防火墙规则集可以分组为“安全组”。

1.7 超融合基础设施
Proxmox VE是一个虚拟化平台，紧密集成了计算、存储和网络资源，管理高可用集群、备份/
恢复以及灾难恢复。所有组件都是软件定义的，并且彼此兼容。因此，可以通过集中的Web管理界面像管理单个系统一样对其进行管理。这些功能使得Proxmox 
VE成为部署和管理开源超融合基础设施的理想选择。

1.7.1 使用Proxmox VE的超融合基础设施（HCI）的优势
超融合基础设施（HCI）特别适用于高基础设施需求与低管理预算相遇的部署，如远程和分支办公环境，或者虚拟专用和公共云。
HCI提供以下优势：
    可扩展性：无缝扩展计算、网络和存储设备（即可以快速独立地扩展服务器和存储）。
    低成本：Proxmox VE是开源的，并集成了您需要的所有组件，如计算、存储、网络、备份和管理中心。它可以替代昂贵的计算/存储基础设施。
    数据保护和效率：集成了备份和灾难恢复等服务。
    简便性：易于配置和集中管理。
    开源：没有供应商锁定。

1.7.2 超融合基础设施：存储
Proxmox VE紧密集成了部署超融合存储基础设施的支持。例如，您可以仅使用Web界面部署和管理以下两种存储技术：
    Ceph：一种既自愈又自管理的共享、可靠且高度可扩展的存储系统。了解如何在Proxmox VE节点上管理Ceph服务，请参阅第8章。
    ZFS：一种集文件系统和逻辑卷管理器于一体的存储解决方案，具有广泛的数据防损坏保护功能、各种RAID模式、快速且低成本的快照等功能。了解如何在Proxmox 
    VE节点上充分利用ZFS的功能，请参阅第3.8节。
此外，Proxmox VE还支持集成各种其他存储技术。您可以在存储管理器章节中了解它们（第7章）。

1.8 为什么选择开源
Proxmox VE使用Linux内核，并基于Debian GNU/Linux发行版。Proxmox VE的源代码根据GNU Affero通用公共许可证第3版发布。这意味着您可以随时查看源代码或为项目做出贡献。
在Proxmox，我们致力于尽可能地使用开源软件。使用开源软件确保了对所有功能的完全访问权限以及高安全性和可靠性。
我们认为，每个人都应该有权访问软件的源代码，以运行它、在其基础上构建，或将更改提交回项目。Proxmox鼓励每个人参与贡献，同时确保产品始终符合专业质量标准。
开源软件还有助于降低您的成本，并使您的核心基础设施摆脱对单一供应商的依赖。

1.9 使用Proxmox VE的好处
    开源软件
    无供应商锁定
    Linux内核
    安装快速且易于使用
    基于Web的管理界面
    REST API
    庞大的活跃社区
    低管理成本和简单部署

1.10 获取帮助
1.10.1 Proxmox VE Wiki
信息的主要来源是Proxmox VE Wiki。它将参考文档与用户贡献的内容相结合。

1.10.2 社区支持论坛
我们始终鼓励用户使用Proxmox VE社区论坛讨论和分享他们的知识。论坛由Proxmox支持团队进行监督。庞大的用户群遍布全球。毫无疑问，这样一个大型论坛是获取信息的绝佳场所。

1.10.3 邮件列表
这是通过电子邮件与Proxmox VE社区进行快速交流的方式。
    用户邮件列表：PVE用户列表
    Proxmox VE是完全开源的，欢迎贡献！开发者的主要沟通渠道是：
    开发者邮件列表：PVE开发讨论

1.10.4 商业支持
Proxmox服务器解决方案公司还提供企业支持，可作为Proxmox VE订阅服务计划获得。所有具有订阅的用户都可以访问Proxmox 
VE企业存储库，而且如果拥有基本、标准或高级订阅，还可以访问Proxmox客户门户。客户门户提供帮助和支持，保证从Proxmox VE开发人员获得响应。
有关批量折扣或更多信息，请联系sales@proxmox.com。

1.10.5 Bug跟踪器
Proxmox在https://bugzilla.proxmox.com上运行一个公共bug跟踪器。如果出现问题，请在那里提交报告。
问题可以是一个bug，也可以是对新功能或改进的请求。bug跟踪器有助于跟踪问题，并在解决后发送通知。

1.11 项目历史
该项目始于2007年，2008年发布了第一个稳定版本。当时我们使用OpenVZ作为容器，KVM作为虚拟机。集群功能有限，用户界面简单（服务器生成的网页）。
Proxmox VE管理指南 7 / 534
但我们很快使用Corosync集群堆栈开发了新功能，新的Proxmox集群文件系统（pmxcfs）的引入是一个重大突破，因为它完全屏蔽了用户面前的集群复杂性。
管理16个节点的集群就像管理一个单独的节点一样简单。
我们还引入了一个新的REST API，使用JSON-Schema编写了一个完整的声明性规范。这使得其他人能够将Proxmox VE集成到他们的基础设施中，并轻松提供额外的服务。
此外，新的REST API使得可以使用JavaScript将原始用户界面替换为现代HTML5应用程序。
我们还用noVNC替换了旧的基于Java的VNC控制台代码。因此，您只需要一个Web浏览器来管理您的VM。
对各种存储类型的支持是另一个重大任务。值得注意的是，Proxmox VE是2014年首个默认提供ZFS on 
Linux的发行版。另一个里程碑是在虚拟化节点上运行和管理Ceph存储的能力。这样的设置非常具有成本效益。
当我们开始时，我们是为KVM提供商业支持的第一批公司之一。KVM项目本身不断发展，现在已经成为广泛使用的虚拟化技术。
每个版本都有新功能。我们开发了KVM实时备份功能，使得可以在任何存储类型上创建快照备份。
版本4.0最显著的变化是从OpenVZ转向LXC。现在，容器已经深入整合，它们可以使用与虚拟机相同的存储和网络功能。

1.12 改进Proxmox VE文档
我们始终欢迎对Proxmox VE文档的贡献和改进。有多种方式可以做出贡献。
如果您在本文档中发现错误或其他改进空间，请在Proxmox bug跟踪器中提交一个错误报告以提出更正。
如果您想提出新内容，请选择以下选项之一：
• 维基：对于特定设置、操作指南或教程，维基是贡献的合适选项。
• 参考文档：对于所有用户都会觉得有帮助的一般性内容，请为参考文档提出您的贡献。这包括关于如何安装、配置、使用和排除Proxmox 
VE功能故障的所有信息。参考文档采用asciidoc格式编写。要编辑文档，您需要克隆位于git://git.proxmox.com/git/pve-docs的git仓库，然后按照README.adoc文档操作。
注意
如果您有兴趣参与Proxmox VE代码库的工作，请查阅开发者文档维基文章，了解从何开始。

1.13 Proxmox VE 用户界面默认为英语。然而，得益于社区的贡献，也提供了其他语言的翻译。我们欢迎任何在添加新语言、翻译最新功能以及改进不完整或不一致翻译方面的支持。
Proxmox VE 使用 gettext 管理翻译文件。像 Poedit 这样的工具为编辑翻译文件提供了友好的用户界面，但您可以使用您喜欢的任何编辑器。翻译不需要编程知识[[1.13]]。

1.13.1 使用 git 进行翻译
语言文件作为 git 仓库提供。如果您熟悉 git，请根据我们的开发者文档进行贡献。您可以通过以下操作创建新的翻译（将 <LANG> 替换为语言 ID）：
# git clone git://git.proxmox.com/git/proxmox-i18n.git
# cd proxmox-i18n
# make init-<LANG>.po
或者，您可以使用您喜欢的编辑器编辑现有的翻译：
# poedit <LANG>.po

1.13.2 不使用 git 的翻译
即使您不熟悉 git，也可以帮助翻译 Proxmox VE。首先，您可以在此处下载语言文件。找到您想要改进的语言，然后右键单击此语言文件的 "raw" 链接并选择 Save Link 
As...。修改文件，然后将您的最终翻译直接发送到 office(at)proxmox.com，附带签名的贡献者许可协议[[1.13.2]]。

1.13.3 测试翻译
为了让翻译在 Proxmox VE 中使用，您必须首先将 .po 文件翻译成 .js 文件。您可以通过调用位于同一仓库中的以下脚本来实现这一点：
# ./po2js.pl -t pve xx.po >pve-lang-xx.js
然后，可以将生成的文件 pve-lang-xx.js 复制到目录 /usr/share/pve-i18n，以在您的 Proxmox 服务器上进行测试。
或者，您可以通过从仓库的根目录运行以下命令来构建 deb 包：
# make deb
重要提示
要使这两种方法生效，您需要在系统上安装以下 perl 包。对于 Debian/Ubuntu：
# apt-get install perl liblocale-po-perl libjson-perl

1.13.4 提交翻译
您可以将完成的翻译（.po文件）连同签署的贡献者许可协议一起发送至Proxmox团队的邮箱office(at)proxmox.com。
或者，如果您有一些开发经验，可以将翻译作为补丁发送到Proxmox VE开发邮件列表。请参阅开发者文档。






